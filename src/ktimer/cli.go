package ktimer
import (
    "fmt"    
)

func Help() {
    fmt.Println("Ktimer is a simple timer/ticker manager by golang.")
    fmt.Println("Version ", VERSION)
    fmt.Println("Author ", AUTHOR)
    fmt.Println("Usage:")
    fmt.Printf("%8s%s\n", " ", "ktimer command [arguments]") 
    fmt.Println("The commands are:")
    fmt.Printf("%8s%-10s%-s\n"," ", "help", "show help information and usage")
    fmt.Printf("%8s%-10s%-s\n"," ", "init", "initialization must be used for the first time")
    fmt.Printf("%8s%-10s%-s\n"," ", "start", "start service")
    fmt.Printf("%8s%-10s%-s\n"," ", "stop", "stop service")
    fmt.Printf("%8s%-10s%-s\n"," ", "restart", "restart service")
    fmt.Printf("%8s%-10s%-s\n"," ", "status", "show service status")
    fmt.Printf("%8s%-10s%-s\n"," ", "version", "show software version")
    fmt.Printf("%8s%-10s%-s\n"," ", "add", "add a timer,followed by specific command operation,like: type@second@command@limit")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "[type]:specified type, timer or ticker ")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "[service]:specify how many seconds to execute")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "[command]:specific operations to be performed")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "[limit]:limit number. 0 is not limited to ticker")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "e.g.")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "ktimer add \"timer@1@echo -e Hello Ktimer\"")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "ktimer add \"ticker@10@date --rfc-3339=ns@0\"")
    fmt.Printf("%8s%-10s%-s\n"," ", "get", "get the timer information by a key.The key is MD5 when inserted timer.")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "e.g.")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "ktimer get 912ec803b2ce49e4a541068d495ab570")
    fmt.Printf("%8s%-10s%-s\n"," ", "del", "delete the timer by a key.The key is MD5 when inserted timer")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "e.g.")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "ktimer del 912ec803b2ce49e4a541068d495ab570")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")
    fmt.Printf("%8s%-10s%-s\n"," ", "", "")



}
